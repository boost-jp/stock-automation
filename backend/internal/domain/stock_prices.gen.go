// Code generated by SQLBoiler 4.19.5 (https://github.com/aarondl/sqlboiler). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package models

import (
	"context"
	"database/sql"
	"fmt"
	"reflect"
	"strconv"
	"strings"
	"sync"
	"time"

	"github.com/aarondl/null/v8"
	"github.com/aarondl/sqlboiler/v4/boil"
	"github.com/aarondl/sqlboiler/v4/drivers"
	"github.com/aarondl/sqlboiler/v4/queries"
	"github.com/aarondl/sqlboiler/v4/queries/qm"
	"github.com/aarondl/sqlboiler/v4/queries/qmhelper"
	"github.com/aarondl/sqlboiler/v4/types"
	"github.com/aarondl/strmangle"
	models "github.com/boost-jp/stock-automation/internal/domain"
	cerrors "github.com/boost-jp/stock-automation/internal/errors"
	errors "github.com/boost-jp/stock-automation/internal/errors/boilerrors"
)

//go:generate go run  ../../../cmd/generator/repoinit --fields=ID,Code,Date,OpenPrice,HighPrice,LowPrice,ClosePrice,Volume,CreatedAt,UpdatedAt, StockPrice

// You can edit this as you like.

// StockPrice is an object representing the database table.
// Set the "validate" tags as needed.
// https://pkg.go.dev/gopkg.in/go-playground/validator.v10
type StockPrice struct {
	ID         string        `validate:""`
	Code       string        `validate:""` // 銘柄コード
	Date       time.Time     `validate:""` // 取引日
	OpenPrice  types.Decimal `validate:""` // 始値
	HighPrice  types.Decimal `validate:""` // 高値
	LowPrice   types.Decimal `validate:""` // 安値
	ClosePrice types.Decimal `validate:""` // 終値
	Volume     int64         `validate:""` // 出来高
	CreatedAt  null.Time     `validate:""` // 作成日時
	UpdatedAt  null.Time     `validate:""` // 更新日時
}

func (m *StockPrice) valid() error {
	return validate.Struct(m)
}

func NewStockPrice(
	ID string,
	Code string,
	Date time.Time,
	OpenPrice types.Decimal,
	HighPrice types.Decimal,
	LowPrice types.Decimal,
	ClosePrice types.Decimal,
	Volume int64,
	CreatedAt null.Time,
	UpdatedAt null.Time,
) (*StockPrice, error) {
	do := &StockPrice{
		ID:         ID,
		Code:       Code,
		Date:       Date,
		OpenPrice:  OpenPrice,
		HighPrice:  HighPrice,
		LowPrice:   LowPrice,
		ClosePrice: ClosePrice,
		Volume:     Volume,
		CreatedAt:  CreatedAt,
		UpdatedAt:  UpdatedAt,
	}
	if err := do.valid(); err != nil {
		return nil, err
	}
	return do, nil
}
